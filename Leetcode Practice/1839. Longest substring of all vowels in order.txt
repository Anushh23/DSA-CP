class Solution {
public:
    int longestBeautifulSubstring(string word) {
        map<char,char>mp;
        char c='a';
        mp['a']='e';mp['e']='i';mp['i']='o';mp['o']='u';mp['u']='a';
        int mx=0,cnt=0,flg=0;
        for(int i=0;i<word.size();i++)
        {
            if(word[i]!=c)
            {
                cnt=0;
                c='a';
                if(word[i]==c)
                {
                    while(i<word.size()&&word[i]==c)
                {
                    i++;
                    cnt++;
                }
                i--;                
                if(word[i]=='u'){mx=max(mx,cnt);}
                c=mp[word[i]];
            }
            }
            else if(word[i]==c)
            {
                while(i<word.size()&&word[i]==c)
                {
                    i++;
                    cnt++;
                }
                i--;                
                if(word[i]=='u'){mx=max(mx,cnt);cnt=0;}
                c=mp[word[i]];
            }
        }
        return mx;
    }
};