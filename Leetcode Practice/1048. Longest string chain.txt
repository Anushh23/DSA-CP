class Solution {
public:
    int longestStrChain(vector<string>& words) {
        int cnt=1,mx=1;
        vector<pair<int,string>>v;
        for(auto u:words)
        {
            v.push_back({u.size(),u});
        }
        sort(v.begin(),v.end());
        vector<int>dp(words.size(),0);
        for(int i=0;i<v.size();i++)
        {
            int mxx=1;
            string k=v[i].second;
            for(int j=i-1;j>=0;j--)
            {
                if(v[j].second.size()>k.size()-1){continue;}
                else if(v[j].second.size()<k.size()-1){break;}
                string k1=v[j].second;
                int p2=0;
                int flg=0;
                for(int p1=0;p1<k1.size();p1++)
                {
                    if(k1[p1]!=k[p2]&&flg==0)
                    {
                        p2++;p1--;flg=1;
                    }
                    else if(k1[p1]==k[p2]){p2++;}
                    else
                    {
                        flg=2;break;
                    }
                }
                if(flg==2){continue;}
                mxx=max(1+dp[j],mxx);
            }
            dp[i]=mxx;
        }
        mx=0;
        for(auto u:dp)
        {
            mx=max(mx,u);
        }
        return mx;
    }
};