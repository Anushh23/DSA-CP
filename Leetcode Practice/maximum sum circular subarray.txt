class Solution {
public:
    int maxSubarraySumCircular(vector<int>& nums) {
        int i,j,n=nums.size(),sum=0,mx=INT_MIN,mx2=0;
        vector<int>dp(n),dp1(n);
        for(i=0;i<n;i++)
        {
            mx=max(mx,nums[i]);
            sum+=nums[i];
            dp[i]=sum;
            mx2=max(mx2,sum);
            dp1[i]=mx2;
        }
        if(mx<=0){return mx;}
        int mxx=0,suma=0;
        for(i=0;i<n;i++)
        {
            if(suma+nums[i]<0)
            {
                suma=0;
            }
            else
            {
                suma+=nums[i];
            }
            mxx=max(mxx,suma);
        }
        int mxx2=0;suma=0;
        vector<int>dpp(n),dpp1(n);
        for(i=n-1;i>=0;i--)
        {
           suma+=nums[i];
            mxx2=max(mxx2,suma);
            dpp[i]=mxx2;
            dpp1[i]=suma;
        }
        int mx_ans=0;
        for(i=0;i<n-1;i++)
        {
            mx_ans=max(mx_ans,dp[i]+dpp[i+1]);
        }
        mxx=max(mxx,mx_ans);
        mx_ans=0;
        for(i=1;i<n-1;i++)
        {
            mx_ans=max(mx_ans,dpp1[i]+dp1[i-1]);
        }
         mxx=max(mxx,mx_ans);
        return mxx;
        
        
    }
};