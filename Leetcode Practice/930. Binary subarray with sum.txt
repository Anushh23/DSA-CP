class Solution {
public:
    int numSubarraysWithSum(vector<int>& nums, int goal) {
        if(goal==0)
        {
            int cnt=0;
            for(int i=0;i<nums.size();i++)
            {
                if(nums[i]==1){continue;}
                int pp=0;
                while(i<nums.size()&&nums[i]==0)
                {
                    i++;
                    pp++;
                }
                i--;
                cnt+=1ll*pp*(pp+1)/2;
            }
            return cnt;
        }
        vector<int>v;
        for(int i=0;i<nums.size();i++)
        {
            if(nums[i]==1){v.push_back(i);}
        }
        int cnt=0;
        for(int i=0;i<v.size();i++)
        {
            if(v.size()-i>=goal)
            {
                int a1=1,a2=1;
                if(i==0)
                {
                    a1=v[i]+1;
                }
                else
                {
                    a1=v[i]-v[i-1];
                }
                if(i+goal-1==v.size()-1)
                {
                    a2=nums.size()-v[i+goal-1];
                }
                else
                {
                    a2=v[i+goal]-v[i+goal-1];
                }
                cnt+=a1*a2;
            }
            else
            {
                break;
            }
        }
        return cnt;
    }
};