class Solution {
public:
    vector<vector<int>> generateMatrix(int n) {
        vector<int>v;
        for(int i=1;i<=n*n;i++)
        {
            v.push_back(i);
        }
        int grid[n][n];
        int i=0,j=0,cnt=0,k,pp=1;
        map<pair<int,int>,int>mp;
        for(k=0;k<n*n;k++)
        {
            grid[i][j]=v[k];
            mp[{i,j}]++;
            if(pp==1){j++;}
            else if(pp==-1){j--;}
            else if(pp==2){i++;}
            else{i--;}
            
            if((i<0||j<0||i>=n||j>=n)||(mp.find({i,j})!=mp.end()))
            {
                if(pp==1){j--;i++;pp=2;}
                else if(pp==-1){j++;i--;pp=-2;}
                else if(pp==2){i--;j--;pp=-1;}
                else{i++;j++;pp=1;}
            }
        }
        vector<vector<int>>ans;
        for(i=0;i<n;i++)
        {
            vector<int>temp;
            for(j=0;j<n;j++)
            {
                temp.push_back(grid[i][j]);
            }
            ans.push_back(temp);
            
        }
        return ans;
    }
};