class Solution {
public:
    vector<vector<int>> insert(vector<vector<int>>& intervals, vector<int>& newInterval) {
        int i,n=intervals.size();
        if(n==0)
        {
            intervals.push_back(newInterval);
            return intervals;
        }
        int flg=0;
        for(i=0;i<n;i++)
        {
            if(newInterval[0]<=intervals[i][1]&&newInterval[1]>=intervals[i][0])
            {
                int a1= min(intervals[i][0],newInterval[0]);
                int a2= max(intervals[i][1],newInterval[1]);
                intervals[i][0]=a1;intervals[i][1]=a2;flg=1;
                break;
            }
        }
        if(flg==0)
        {
            intervals.push_back(newInterval);
            n++;
        }
        sort(intervals.begin(),intervals.end());
         vector<pair<int,int>>v;
        for(i=0;i<n;i++)
        {
            v.push_back({intervals[i][0],intervals[i][1]});
        }
        sort(v.begin(),v.end());
        int a1=v[0].first,a2=v[0].second;
        vector<vector<int>>ans;
        for(i=1;i<n;i++)
        {
            if(v[i].first<=a2)
            {
                a1=min(a1,v[i].first);
                a2=max(a2,v[i].second);
            }
            else
            {
                vector<int>temp={a1,a2};
                ans.push_back(temp);
                a1=v[i].first;
                a2=v[i].second;
            }
        }
        if(a1!=-1)
        {
            vector<int>temp={a1,a2};
            ans.push_back(temp);
        }
        return ans;
    }
};