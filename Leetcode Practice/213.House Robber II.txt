class Solution {
public:
    int rob(vector<int>& nums) {
        int i,j,n=nums.size();
        if(n==1) return nums[0];
        int dp[n][2];
        int mx=0,mxx=0;
        dp[0][0]=nums[0];
        dp[1][0]=0;
        mx=max(mx,dp[0][0]);
        for(i=2;i<n-1;i++)
        {
            if(i-2>=0&&i-3>=0)
            {
                dp[i][0]=max(dp[i-2][0],dp[i-3][0])+nums[i];
            }
            else if(i-2>=0)
            {
                dp[i][0]=dp[i-2][0]+nums[i];
            }
            mx=max(dp[i][0],mx);
        }
        dp[0][1]=0;
        dp[1][1]=nums[1];
        mxx=max(dp[1][1],mxx);
        for(i=2;i<n;i++)
        {
            if(i-2>=0&&i-3>=0)
            {
                dp[i][1]=max(dp[i-2][1],dp[i-3][1])+nums[i];
            }
            else if(i-2>=0)
            {
                dp[i][1]=dp[i-2][1]+nums[i];
            }
            mxx=max(mxx,dp[i][1]);
        }
        int ans= max(mxx,mx);
        return ans;
    }
};