class Solution {
public:
    bool canPartition(vector<int>& nums) {
        int sum=0,n=nums.size();
        for(auto u:nums)
        {
            sum+=u;
        }
        if(sum%2!=0){return false;}
        sum=sum/2;
        sort(nums.begin(),nums.end());
        vector<vector<int>>dp(n,vector<int>(sum+1,0));
        for(int i=0;i<n;i++)
        {
            dp[i][0]=1;
            if(nums[i]<=sum){dp[i][nums[i]]=1;}
        }
        for(int i=1;i<n;i++)
        {
            for(int j=1;j<=sum;j++)
            {
                if(i!=0)
                {
                    dp[i][j]=dp[i-1][j];
                    if(j-nums[i]>=0&&dp[i-1][j-nums[i]]>0)
                    {
                        dp[i][j]=1;
                    }
                }
            }
        }
        for(int i=0;i<n;i++)
        {
            if(dp[i][sum]>0){return true;}
        }
        return false;
    }
};