class Solution {
public:
    int minAbsoluteSumDiff(vector<int>& nums1, vector<int>& nums2) {
        int M=1e9+7,i,n=nums1.size(),sum_i;
        long long sum=0;
        vector<long long>v;
        vector<int>mp=nums1;
        sort(mp.begin(),mp.end());
        long long mx=0;
        for(i=0;i<nums2.size();i++)
        {
            long long pp= abs(nums2[i]-nums1[i]);
            long long mnn=1e12;
            int pp1= lower_bound(mp.begin(),mp.end(),nums2[i])-mp.begin();
            if(pp1!=mp.size())
            {
                mnn=min(mnn,1ll*abs(mp[pp1]-nums2[i]));
            }
            if(pp1!=0)
            {
                mnn=min(mnn,1ll*abs(mp[pp1-1]-nums2[i]));
            }
            mx=max(mx,1ll*abs(pp-mnn));
            sum+=pp;    
        }
        sum-=mx;
        sum%=M;
        sum_i=sum;
        sum_i%=M;
        return sum_i;
    }
};